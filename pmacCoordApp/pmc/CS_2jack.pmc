CLOSE

;################################################
;; \file
;; Define motion for 2 jack system
;;
;; Original Author: Ronaldo Mercado
;;
;; Defined axes:
;; - X (addr 6) = height of surface in EGUs, PIVOT away from J1
;; - Y (addr 7) = angle of the surface in i15 units
;;
;; Macros:
;; - COORD = $(COORD)  CS number, e.g. 2
;; - PLC = $(PLC)  PLC number, should be CS number+15, e.g. 17
;; - J1 = $(J1)  Axisnum for Jack 1, e.g. 1
;; - J2 = $(J2)  Axisnum for Jack 2, e.g. 2
;; - DIST = $(DIST)  Distance between 2 jacks when they are in the zero position
;; - PIVOT = $(PIVOT)  Distance from jack 1 to pivot point of the surface
;; - DEPTH = $(DEPTH)  Depth of the surface on the mount
;################################################

; Change to CS$(COORD)
&$(COORD)

; Set relevant axes to use kinematics
#$(J1)->I ; +ve blade
#$(J2)->I ; -ve blade

; These are set by motor_in_cs.template
#define J1MOVE P(4700+$(J1))
#define J1MRES P(4800+$(J1))
#define J1OFF  P(4900+$(J1))
#define J2MOVE P(4700+$(J2))
#define J2MRES P(4800+$(J2))
#define J2OFF  P(4900+$(J2))

;; This is the distance between the 2 jacks when they are in the zero position
#define DIST Q20
DIST = $(DIST)
;; This is the distance from jack 1 to pivot point of the surface
#define PIVOT Q21
PIVOT = $(PIVOT)
;; This is the depth of the surface on the mount
#define DEPTH Q22
DEPTH = $(DEPTH)

; Calculate height and angle from jack positions
#define J1POS (J1MRES*P$(J1)+J1OFF)
#define J2POS (J2MRES*P$(J2)+J2OFF)
#define HEIGHT Q7
#define ANGLE Q8
; Local variables
#define RATIO Q128
OPEN FORWARD
CLEAR
    ; this is the difference in height of the jacks divided by their distance apart
    RATIO=(J2POS-J1POS)/DIST
    ; this is the angle of the surface
    ANGLE=atan(RATIO)
    ; the height of the surface
    HEIGHT=J1POS+RATIO*PIVOT+DEPTH/cos(ANGLE)
CLOSE

; Calculate jack positions from height and angle
#define SURFACE Q228
#define TANTHETA Q229
#define J1POS Q230
#define J2POS Q231
OPEN INVERSE
CLEAR
    ; this is the bottom edge of the surface
    SURFACE=HEIGHT-DEPTH/cos(ANGLE)
    ; store tan theta
    TANTHETA=tan(ANGLE)
    ; work out the jack positions in EGUs
    J1POS = SURFACE-PIVOT*TANTHETA
    J2POS = SURFACE+(DIST-PIVOT)*TANTHETA
    ; then cts
    P$(J1)=(J1POS-J1OFF)/J1MRES
    P$(J2)=(J2POS-J2OFF)/J2MRES
CLOSE

; A PLC(sx+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)
#define J1POS (J1MRES*m$(J1)62/(I$(J1)08*32)+J1OFF)
#define J2POS (J2MRES*m$(J2)62/(I$(J2)08*32)+J2OFF)
#define HEIGHT Q87
#define ANGLE Q88
; Local variables
#define RATIO Q328
OPEN PLC$(PLC)
CLEAR
    ADDRESS&$(COORD)
    ; this is the difference in height of the jacks divided by their distance apart
    RATIO=(J2POS-J1POS)/DIST
    ; this is the angle of the surface
    ANGLE=atan(RATIO)
    ; the height of the surface
    HEIGHT=J1POS+RATIO*PIVOT+DEPTH/cos(ANGLE)
    ; If jack motor record did the last move, set demands = readbacks
    if (J1MOVE = 1)
    or (J2MOVE = 1)
        J1MOVE = 0
        J2MOVE = 0
        Q77 = Q87
        Q78 = Q88
    endif
CLOSE
ENABLE PLC$(PLC)
