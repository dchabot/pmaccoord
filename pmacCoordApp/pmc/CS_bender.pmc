CLOSE

;################################################
;; \file
;; Define single bending mirror actuator to radius of curvature translation
;;
;; Author: Ronaldo Mercado
;;
;; Defined axes:
;; - X (addr 6) = Radius of curvature in km
;;
;; Macros
;; - COORD = $(COORD)  CS number, e.g. 2
;; - PLC = $(PLC)  PLC number, should be CS number+15, e.g. 17
;; - J1 = $(J1)  Axisnum for bending actuator
;; - SLOPE = $(SLOPE)   slope [1/Km / mm ]
;; - INTERCEPT = $(INTERCEPT)   intercept [1/Km]
;; - LIMIT = $(LIMIT)   [Km] where the CS stops operating
;;
;; This CS relies on the fit presented in SCI-OPT-REP-0058
;; where 1/R is ~ linear with the number of counts
;################################################

; The CS axis is the radius of curvature with
; EGU in Km.
; There is a discontinuity in R when 1/R is zero
;
; Change to CS$(COORD)
&$(COORD)
; The fit provided by metrology
; 1/R = SLOPE * J1 + INTERCEPT
; slope [1/Km / mm ]
#define SLOPE Q20
; intercept [1/Km]
#define INTERCEPT Q21
; Limit where CS stops operating [Km]
#define LIMIT Q22
SLOPE = $(SLOPE)
INTERCEPT = $(INTERCEPT)
LIMIT = $(LIMIT)

; These are set by motor_in_cs.template
#define J1MOVE P(4700+$(J1))
#define J1MRES P(4800+$(J1))
#define J1OFF  P(4900+$(J1))

; Set relevant axes to use kinematics
#$(J1)->I ; actuator

; Calculate radius of curvature from jack position
#define J1POS (J1MRES*P$(J1)+J1OFF)
#define RADIUS Q7
#define SETERROR M(100*$(COORD)+5082)=1
OPEN FORWARD
CLEAR
    ; This is the radius. Has singularity (Inf) at TRANSLATION = -INTERCEPT/SLOPE
    IF ( ABS(J1POS+INTERCEPT/SLOPE) !< ABS(1/LIMIT/SLOPE) )
        RADIUS=1.0/(SLOPE *J1POS + INTERCEPT)
    ELSE
        SETERROR
    ENDIF
CLOSE

; work out the actuator position from the radius of curvature
#define J1POS Q228
OPEN INVERSE
CLEAR
    ; calc in EGUs
    J1POS=((1/RADIUS-INTERCEPT))/SLOPE
    ; then in cts
    P$(J1)=(J1POS-J1OFF)/J1MRES
CLOSE

; A PLC(sx+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)
#define J1POS (J1MRES*m$(J1)62/(I$(J1)08*32)+J1OFF)
#define RADIUS Q87
OPEN PLC$(PLC)
CLEAR
    ADDRESS&$(COORD)
    ; This is the radius. Has singularity (Inf) at J1POS = -INTERCEPT/SLOPE
    IF ( ABS(J1POS+INTERCEPT/SLOPE) !< ABS(1/LIMIT/SLOPE) )
        RADIUS=1.0/(SLOPE *J1POS + INTERCEPT)
    ENDIF
    ; If actuator motor record did the last move, set demands = readbacks
    ; This is not really needed as there is only one axis, but we'll put it
    ; in just in case
    if (J1MOVE = 1)
        J1MOVE = 0
        Q77 = Q87
    endif
CLOSE
ENABLE PLC$(PLC)

