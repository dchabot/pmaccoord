; Angles in rad
i15=1

CLOSE

;###############################################
;; \file
;; Define motion of a generic 3 jack system with a mirror on top. Jacks should 
;; be numbered in a clockwise order looking from the top with J1 having the 
;; smallest Z value
;;
;; Original Author: Tom Cobb
;;
;; Defined axes:
;; - X (addr 6) = Pitch in i15 EGUs
;; - Y (addr 7) = Roll in i15 EGUs
;; - Z (addr 8) = Height in same EGUs as jacks
;;
;; Macros (and example values):
;; - COORD = 2  CS number (only works for CS 1..9), e.g. 2
;; - PLC = 17  PLC number, should be CS number+15, e.g. 17
;; - J1 = 1  Axisnum for jack 1, e.g. 2
;; - J1X = 0  global X co-ord of J1 base in mm, e.g. 0
;; - J1Z = -100  global Z co-ord of J1 base in mm, e.g. -100
;; - J2 = 2  Axisnum for jack 2, e.g. 3
;; - J2X = 50  global X co-ord of J2 base in mm, e.g. 50
;; - J2Z = 100  global Z co-ord of J2 base in mm, e.g. 100
;; - J3 = 3  Axisnum for jack 3, e.g. 4
;; - J3X = -50  global X co-ord of J3 base in mm, e.g. -50
;; - J3Z = 100  global Z co-ord of J3 base in mm, e.g. 100
;; - MD = 10  depth of surface in mm, e.g. 10
;; - MCX = 0  global X co-ord of measure point in mm, e.g. 0
;; - MCZ = 10  global Z co-ord of measure in mm, e.g. 10
;; - JTX = 20  jack plane X co-ord of J1 top in mm, e.g. 20
;; - JTZ = 20  jack plane Z co-ord of J1 top in mm, e.g. 20
;; - MP = 0  pitch of mirror support in deg, e.g. 45
;; - MR = 0  roll of mirror support in deg, e.g. 45
;################################################

; Change to CS2
&2

; Set relevant axes to use kinematics
#1->I
#2->I
#3->I

; These are set by motor_in_cs.template
#define J1MOVE P(4700+1)
#define J1MRES P(4800+1)
#define J1OFF  P(4900+1)
#define J2MOVE P(4700+2)
#define J2MRES P(4800+2)
#define J2OFF  P(4900+2)
#define J3MOVE P(4700+3)
#define J3MRES P(4800+3)
#define J3OFF  P(4900+3)

; Setup the inputs, all are in i15 EGUs or mm
; These are the global co-ordinates of J1
#define J1X Q20
J1X = 0
#define J1Z Q21
J1Z = -100
; These are the global co-ordinates of J2
#define J2X Q22
J2X = 50
#define J2Z Q23
J2Z = 100
; These are the global co-ordinates of J3
#define J3X Q24
J3X = -50
#define J3Z Q25
J3Z = 100
; The mirror support is mounted at (0,0) relative to these co-ordinates
#define JTX Q26
JTX = 20
#define JTZ Q27
JTZ = 20
; This is the pitch of the mirror support mounted on the jack plane
#define MP  Q28
MP = 0
; This is the roll of the mirror support
#define MR  Q29
MR = 0
; This is the surface depth
#define MD  Q30
MD = 10
; This is the measure point for pitch, roll, Y in global co-ordinates
#define MCX Q31
MCX = 0
#define MCZ Q32
MCZ = 10


; Calculate Pitch, Roll and Height from jack positions
#define J1Y (J1MRES*P1+J1OFF)
#define J2Y (J2MRES*P2+J2OFF)
#define J3Y (J3MRES*P3+J3OFF)
#define PITCH Q7
#define ROLL Q8
#define HEIGHT Q9
; Local variables
#define JP  Q128
#define JR  Q129
#define UX  Q130
#define UY  Q131
#define UZ  Q132
#define VX  Q133
#define VY  Q134
#define VZ  Q135
#define WX  Q136
#define WY  Q137
#define WZ  Q138
OPEN FORWARD
CLEAR
    ; We calculate vectors U = J3 - J1, V = J2 - J1
    UX = J3X - J1X
    UY = J3Y - J1Y
    UZ = J3Z - J1Z
    VX = J2X - J1X
    VY = J2Y - J1Y
    VZ = J2Z - J1Z
    ; The cross product of these gives W, the normal to the jack plane
    WX = UY*VZ-UZ*VY
    WY = UZ*VX-UX*VZ
    WZ = UX*VY-UY*VX
    ; We can calculate the pitch and roll of this normal from the Y+ vector
    ; WY != 0 as jacks are all in Y direction
    JP = atan(WZ/WY)
    JR = -atan(WX/WY)
    ; Add the pitch and roll of the mirror support in and we have pitch and roll
    PITCH = JP + MP
    ROLL = JR + MR
    ; Now we work out Y
    ; First we calculate U, mirror plane normal
    UX = -tan(ROLL)
    UY = 1.0
    UZ = tan(PITCH)
    ; Now work out V, the origin of the jack plane
    ; Start at the top of jack1, then move to the origin of the jack plane
    ; Then up by the depth of the mirror plane
    VX = J1X - cos(JR)*JTX
    VY = J1Y + sin(JP)*JTZ - sin(JR)*JTX + MD/(cos(ROLL)*cos(PITCH))
    VZ = J1Z - cos(JP)*JTZ
    ; Now we can calculate the equation of the mirror plane, and so Y
    HEIGHT = UX*(VX-MCX)/UY + VY + UZ*(VZ-MCZ)/UY
CLOSE


; Calculate jack positions from Pitch, Roll and Height
; Local variables
#define JP  Q228
#define JR  Q229
#define UX  Q230
#define UY  Q231
#define UZ  Q232
#define VX  Q233
#define VY  Q234
#define VZ  Q235
#define WX  Q236
#define WY  Q237
#define WZ  Q238
#define J1Y Q239
#define J2Y Q240
#define J3Y Q241
OPEN INVERSE
CLEAR
    ; get the total pitch and roll
    JP = PITCH - MP
    JR = ROLL - MR
    ; define U, normal to the mirror plane
    UX = -tan(ROLL)
    UY = 1.0
    UZ = tan(PITCH)
    ; define V, the measurement point on the mirror plane, moved down by the depth of the mirror
    VX = MCX
    VY = HEIGHT - MD/(cos(ROLL)*cos(PITCH))
    VZ = MCZ
    ; Now work out W, the origin of the jack plane
    ; Start at the top of jack1, then move to the origin of the jack plane
    WX = J1X - cos(JR)*JTX
    WZ = J1Z - cos(JP)*JTZ
    ; work out VY using the equation of the lower mirror plane
    WY = UX*(VX-WX)/UY + VY + UZ*(VZ-WZ)/UY
    ; define V, normal to jack plane
    VX = -tan(JR)
    VY = 1.0
    VZ = tan(JP)
    ; we now have W, a point on the jack plane, and a V, the normal, so use equation to work out jack heights in EGUs
    J1Y = VX*(WX-J1X)/VY + WY + VZ*(WZ-J1Z)/VY
    J2Y = VX*(WX-J2X)/VY + WY + VZ*(WZ-J2Z)/VY
    J3Y = VX*(WX-J3X)/VY + WY + VZ*(WZ-J3Z)/VY
    ; and now in cts
    P1 = (J1Y - J1OFF) / J1MRES
    P2 = (J2Y - J2OFF) / J2MRES
    P3 = (J3Y - J3OFF) / J3MRES
CLOSE


; A PLC(sx+15) needs to be made to do position reporting
; Readbacks should be in &{axisnum}Q81..89
; As forward kinematic, but with Px = mx62/(Ix08*32)
#define J1Y (J1MRES*m162/(I108*32)+J1OFF)
#define J2Y (J2MRES*m262/(I208*32)+J2OFF)
#define J3Y (J3MRES*m362/(I308*32)+J3OFF)
#define PITCH Q87
#define ROLL Q88
#define HEIGHT Q89
; Local variables
#define JP  Q328
#define JR  Q329
#define UX  Q330
#define UY  Q331
#define UZ  Q332
#define VX  Q333
#define VY  Q334
#define VZ  Q335
#define WX  Q336
#define WY  Q337
#define WZ  Q338
OPEN PLC 17
CLEAR
    ADDRESS&2
    ; We calculate vectors U = J3 - J1, V = J2 - J1
    UX = J3X - J1X
    UY = J3Y - J1Y
    UZ = J3Z - J1Z
    VX = J2X - J1X
    VY = J2Y - J1Y
    VZ = J2Z - J1Z
    ; The cross product of these gives W, the normal to the jack plane
    WX = UY*VZ-UZ*VY
    WY = UZ*VX-UX*VZ
    WZ = UX*VY-UY*VX
    ; We can calculate the pitch and roll of this normal from the Y+ vector
    ; WY != 0 as jacks are all in Y direction
    JP = atan(WZ/WY)
    JR = -atan(WX/WY)
    ; Add the pitch and roll of the mirror support in and we have pitch and roll
    PITCH = JP + MP
    ROLL = JR + MR
    ; Now we work out Y
    ; First we calculate U, mirror plane normal
    UX = -tan(ROLL)
    UY = 1.0
    UZ = tan(PITCH)
    ; Now work out V, the origin of the jack plane
    ; Start at the top of jack1, then move to the origin of the jack plane
    ; Then up by the depth of the mirror plane
    VX = J1X - cos(JR)*JTX
    VY = J1Y + sin(JP)*JTZ - sin(JR)*JTX + MD/(cos(ROLL)*cos(PITCH))
    VZ = J1Z - cos(JP)*JTZ
    ; Now we can calculate the equation of the mirror plane, and so Y
    HEIGHT = UX*(VX-MCX)/UY + VY + UZ*(VZ-MCZ)/UY
    ; If jack motor record did the last move, set demands = readbacks
    if (J1MOVE = 1)
    or (J2MOVE = 1)
    or (J3MOVE = 1)
        J1MOVE = 0
        J2MOVE = 0
        J3MOVE = 0
        Q77 = Q87
        Q78 = Q88
        Q79 = Q89
    endif
CLOSE
ENABLE PLC 17


CLOSE

;####################################################
; Generic program for moving any co-ordinate system
; Original Author: Tom Cobb
; Used variables: Q71..Q79, Q81..Q89
; You should do a $$$ or type the following the first time you load this prog.
; If you type the commands in, ignore any errors. If you $$$, PLC1 will do it
; automatically for you at startup:
;&16 DEFINE LOOKAHEAD 50,10
;&15 DEFINE LOOKAHEAD 50,10
;&14 DEFINE LOOKAHEAD 50,10
;&13 DEFINE LOOKAHEAD 50,10
;&12 DEFINE LOOKAHEAD 50,10
;&11 DEFINE LOOKAHEAD 50,10
;&10 DEFINE LOOKAHEAD 50,10
;&9 DEFINE LOOKAHEAD 50,10
;&8 DEFINE LOOKAHEAD 50,10
;&7 DEFINE LOOKAHEAD 50,10
;&6 DEFINE LOOKAHEAD 50,10
;&5 DEFINE LOOKAHEAD 50,10
;&4 DEFINE LOOKAHEAD 50,10
;&3 DEFINE LOOKAHEAD 50,10
;&2 DEFINE LOOKAHEAD 50,10
;####################################################

;This program defines the program needed to do a move using the motor record
;on a CS axis
;to do a move we need to do &{CS}R
;to stop a move we need to do &{CS}A
;demand values are in &{CS}Q71..79
;The following are set by the motor record:
;Isx87 = Acceleration
;Isx88 = S curve
;Isx89 = Feedrate

; Set some defaults for all CS axes
i5213,15,100=50   ; segmentation time (needed for lookahead)
i5220,15,100=50   ; lookahead length (needed to limit max velocity to max set in CS)
i5250,15,100=1    ; Enable kinematics

OPEN PROG 10
CLEAR
LINEAR
ABS
; need to think about the consequences of including all axes in frax
FRAX(A,B,C,U,V,W,X,Y,Z)
A(Q71)B(Q72)C(Q73)U(Q74)V(Q75)W(Q76)X(Q77)Y(Q78)Z(Q79)
DWELL0
CLOSE

